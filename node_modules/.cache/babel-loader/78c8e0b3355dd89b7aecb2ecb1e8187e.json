{"ast":null,"code":"import { GET_USES_REQUEST, GET_USES_SECCESS, GET_USES_FAIL } from \"../constants/productConstants\";\nimport axios from \"axios\";\nexport const UsesAction = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_USES_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"https://tata-1-mg-backend.vercel.app/uses\");\n    dispatch({\n      type: GET_USES_SECCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_USES_FAIL,\n      payload: error.data && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["GET_USES_REQUEST","GET_USES_SECCESS","GET_USES_FAIL","axios","UsesAction","dispatch","type","data","get","payload","error","response","message"],"sources":["/Users/abhishekranjanmishra/Desktop/Tata_1mg/src/redux/action/useAction.js"],"sourcesContent":["import {\n    GET_USES_REQUEST,\n    GET_USES_SECCESS,\n    GET_USES_FAIL,\n  } from \"../constants/productConstants\";\n  import axios from \"axios\";\n\n\n  \nexport const UsesAction =()=> async (dispatch) => {\n    try {\n      dispatch({ type: GET_USES_REQUEST });\n      const { data } = await axios.get(\"https://tata-1-mg-backend.vercel.app/uses\");\n      dispatch({ type: GET_USES_SECCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: GET_USES_FAIL,\n        payload:\n          error.data && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n  "],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,aAHJ,QAIS,+BAJT;AAKE,OAAOC,KAAP,MAAkB,OAAlB;AAIF,OAAO,MAAMC,UAAU,GAAE,MAAK,MAAOC,QAAP,IAAoB;EAC9C,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAR,CAAD,CAAR;IACA,MAAM;MAAEO;IAAF,IAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,2CAAV,CAAvB;IACAH,QAAQ,CAAC;MAAEC,IAAI,EAAEL,gBAAR;MAA0BQ,OAAO,EAAEF;IAAnC,CAAD,CAAR;EACD,CAJD,CAIE,OAAOG,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEJ,aADC;MAEPO,OAAO,EACLC,KAAK,CAACH,IAAN,IAAcG,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAlC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CAdI"},"metadata":{},"sourceType":"module"}